name: Preview Cleanup

on:
  pull_request:
    types: [closed]

env:
  GCP_PROJECT_ID: mento-prod
  GCP_REGION: us-central1
  SERVICE_NAME_PREFIX: analytics-api-preview

jobs:
  cleanup-preview:
    name: Cleanup Preview Deployment
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      deployments: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Install gcloud beta components
      run: |
        gcloud components install beta --quiet

    - name: Extract branch name
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BRANCH_NAME="${{ github.head_ref }}"
        else
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        fi
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        
        # Generate safe branch name for Cloud Run service
        # Prefix 'analytics-api-preview-' is 22 chars, leaving 41 chars for branch name
        SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | \
          sed 's/[^a-zA-Z0-9-]/-/g' | \
          tr '[:upper:]' '[:lower:]' | \
          sed 's/^-//;s/-$//' | \
          sed 's/--*/-/g' | \
          cut -c1-41)
        echo "SAFE_BRANCH_NAME=$SAFE_BRANCH_NAME" >> $GITHUB_ENV
        echo "SERVICE_NAME=${SERVICE_NAME_PREFIX}-${SAFE_BRANCH_NAME}" >> $GITHUB_ENV

    - name: Trigger Cleanup Cloud Build
      id: cleanup
      run: |
        echo "Triggering cleanup for branch: ${{ env.BRANCH_NAME }}"
        echo "Service to delete: ${{ env.SERVICE_NAME }}"
        
        BUILD_ID=$(gcloud builds submit \
          --config=cloudbuild-cleanup.yaml \
          --substitutions=_BRANCH_NAME=${{ env.BRANCH_NAME }},_BRANCH_TAG=${{ env.SAFE_BRANCH_NAME }} \
          --project=${{ env.GCP_PROJECT_ID }} \
          --format="value(id)" \
          --async)
        
        echo "Cleanup build started with ID: $BUILD_ID"
        
        # Wait for build to complete
        # Use beta command for better log streaming
        gcloud beta builds log "$BUILD_ID" --stream --project=${{ env.GCP_PROJECT_ID }}

    - name: Update deployment status
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          
          // Get deployments for this PR
          const deployments = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment: `preview-${prNumber}`
          });
          
          // Mark all deployments as inactive
          for (const deployment of deployments.data) {
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'inactive',
              description: 'Preview deployment removed'
            });
          }

    - name: Delete GitHub environment
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const environmentName = `preview-${prNumber}`;
          
          try {
            // Delete the GitHub environment
            await github.rest.repos.deleteEnvironment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment_name: environmentName
            });
            console.log(`‚úÖ Successfully deleted GitHub environment: ${environmentName}`);
          } catch (error) {
            if (error.status === 404) {
              console.log(`‚ÑπÔ∏è GitHub environment ${environmentName} not found (may have been already deleted)`);
            } else {
              console.error(`‚ùå Failed to delete GitHub environment ${environmentName}:`, error.message);
              throw error;
            }
          }

    - name: Comment on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const serviceName = '${{ env.SERVICE_NAME }}';
          const isMerged = context.payload.pull_request.merged;
          
          const statusText = isMerged ? 'merged' : 'closed';
          const emoji = isMerged ? '‚úÖ' : 'üßπ';
          
          const commentBody = `## ${emoji} Preview Deployment Cleaned Up
          
          The preview deployment for this PR has been removed after the PR was ${statusText}.
          
          - Service: \`${serviceName}\`
          - Branch: \`${{ env.BRANCH_NAME }}\`
          - Cleaned up at: ${new Date().toLocaleString('en-US', { timeZone: 'UTC' })} UTC`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: commentBody
          });
