# Cloud Build configuration for Mento Analytics API
# This file defines the build and deployment process with Sentry release integration

# NOTE: Variable Escaping in Cloud Build
# In Cloud Build YAML files, bash variables must be escaped with `$$` to prevent Cloud Build from interpreting them as substitution variables:
# 
# - Use `$$SERVICE_NAME` instead of `$SERVICE_NAME`
# - Use `$${VARIABLE}` instead of `${VARIABLE}` for bash variables
# - Cloud Build substitutions remain as `${_VARIABLE_NAME}`



substitutions:
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _AR_PROJECT_ID: mento-prod
  _AR_REPOSITORY: cloud-run-source-deploy
  _DEPLOY_REGION: us-central1
  _PLATFORM: managed
  _SERVICE_NAME: mento-analytics-api
  # _TRIGGER_ID will be automatically provided when run via Cloud Build trigger

options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE

steps:
  # Step 1: Generate Docker tag (ensure lowercase)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'generate-docker-tag'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Generate lowercase Docker tag
        DOCKER_TAG="${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:$$(echo "${_COMMIT_SHA}" | tr '[:upper:]' '[:lower:]')"
        echo "Generated Docker tag: $$DOCKER_TAG"
        echo "$$DOCKER_TAG" > /workspace/docker_tag.txt

  # Step 2: Build & push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        DOCKER_TAG=$$(cat /workspace/docker_tag.txt)
        echo "Building Docker image with tag: $$DOCKER_TAG"
        docker build -t "$$DOCKER_TAG" --build-arg "RELEASE_VERSION=${_COMMIT_SHA}" . -f Dockerfile

        echo "Pushing Docker image: $$DOCKER_TAG"
        docker push "$$DOCKER_TAG"

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Deploy'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        DOCKER_TAG=$$(cat /workspace/docker_tag.txt)
        echo "Deploying with Docker image: $$DOCKER_TAG"
        
        # The source files are already in /workspace from Cloud Build
        # Source the centralized environment configuration
        cd /workspace && source ./scripts/env-config.sh
        
        # Build the environment variables string for production
        # Override environment-specific values
        export NODE_ENV="production"
        export ENVIRONMENT="production"
        export SENTRY_ENVIRONMENT="production"
        
        # Build the environment variables string
        ENV_VARS=$$(build_env_vars_string "main" "main" "${_COMMIT_SHA}")
        
        # Debug: Print the environment variables
        echo "=== Environment variables being set ==="
        echo "$$ENV_VARS" | tr ',' '\n'
        echo "=== End of environment variables ==="
        
        gcloud run deploy ${_SERVICE_NAME} \
          --platform=managed \
          --image="$$DOCKER_TAG" \
          --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=${_COMMIT_SHA},gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID \
          --region=${_DEPLOY_REGION} \
          --quiet \
          --set-env-vars="$$ENV_VARS" \
          --set-secrets="EXCHANGE_RATES_API_KEY=exchange-rates-api-key-prod:latest,COINMARKETCAP_API_KEY=coinmarketcap-api-key-prod:latest"


# Tags for this build
tags:
  - 'gcp-cloud-build-deploy-cloud-run'
  - 'gcp-cloud-build-deploy-cloud-run-managed'
  - '${_SERVICE_NAME}'

timeout: '600s'
